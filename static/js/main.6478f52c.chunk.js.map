{"version":3,"sources":["api/api.ts","components/Loader/Loader.tsx","components/PostsList/PostsList.tsx","api/posts.ts","components/UserSelect/UserSelect.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/comments.ts","App.tsx","index.tsx"],"names":["BASE_URL","request","url","options","fetch","then","response","ok","Error","status","statusText","json","Loader","className","PostsList","selectedUserId","selectedPostId","selectPost","useState","posts","setPosts","loadingStatus","setLoadingStatus","useEffect","userId","loadedPosts","length","map","post","title","type","onClick","id","UserSelect","users","currentUserId","selectUserId","htmlFor","value","onChange","event","target","user","name","NewCommentForm","postId","addNewComment","setName","email","setEmail","body","setBody","onSubmit","preventDefault","placeholder","required","currentTarget","PostDetails","details","setDetails","comments","setComments","visibility","setVisibility","postDetails","getPostComments","postComments","deleteComment","commentId","method","removeComment","res","current","filter","comment","newComment","headers","JSON","stringify","App","setUsers","setCurrentUserId","setSelectedPostId","gotUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6478f52c.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url: string, options = {}) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/Loader';\n\ntype Props = {\n  selectedUserId: number;\n  selectedPostId: number;\n  selectPost: (postId: number) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedUserId,\n  selectedPostId,\n  selectPost,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loadingStatus, setLoadingStatus] = useState(true);\n\n  useEffect(() => {\n    getUserPosts(selectedUserId)\n      .then(loadedPosts => {\n        setPosts(loadedPosts);\n        setLoadingStatus(false);\n      });\n  }, [selectedUserId]);\n\n  if (loadingStatus) {\n    return (<Loader />);\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {!posts.length && (\n        <div>Posts Not Found</div>\n      )}\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]:`}\n              </b>\n              {post.title}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                selectPost(selectedPostId === post.id ? 0 : post.id);\n              }}\n            >\n              {selectedPostId === post.id\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUsers = (): Promise<User[]> => {\n  return request('/users');\n};\n\nexport const getUserPosts = (userId: number): Promise<Post[]> => {\n  if (userId) {\n    return request(`/posts?userId=${userId}`);\n  }\n\n  return request('/posts');\n};\n\nexport const getPostDetails = (postId: number): Promise<Post> => {\n  return request(`/posts/${postId}`);\n};\n","import React from 'react';\n\ntype Props = {\n  users: User[];\n  currentUserId: number;\n  selectUserId: (value: number) => void;\n};\n\nexport const UserSelect: React.FC<Props> = ({\n  users,\n  currentUserId,\n  selectUserId,\n}) => (\n  <label htmlFor=\"selectUser\">\n    Select a user: &nbsp;\n\n    <select\n      className=\"App__user-selector\"\n      id=\"selectUser\"\n      value={currentUserId}\n      onChange={event => selectUserId(+event.target.value)}\n    >\n      <option value=\"0\">All users</option>\n      {users.map(user => (\n        <option\n          value={user.id}\n          key={user.id}\n        >\n          {user.name}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number;\n  addNewComment: (newComment: Comment) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, addNewComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    addNewComment({\n      postId,\n      name,\n      email,\n      body,\n    } as Comment);\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={name}\n          onChange={event => setName(event.currentTarget.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={event => setEmail(event.currentTarget.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={body}\n          onChange={event => setBody(event.currentTarget.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostComments, postComment, removeComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [details, setDetails] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [visibility, setVisibility] = useState<boolean>(true);\n  const [loadingStatus, setLoadingStatus] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(postDetails => {\n        setDetails(postDetails);\n        setLoadingStatus(false);\n      });\n\n    getPostComments(selectedPostId)\n      .then(postComments => setComments([...postComments]));\n  }, [selectedPostId]);\n\n  const deleteComment = (commentId: number) => {\n    removeComment(commentId)\n      .then(res => {\n        if (res) {\n          setComments(current => current.filter(comment => comment.id !== commentId));\n        }\n      });\n  };\n\n  const addComment = (comment: Partial<Comment>) => {\n    postComment(comment)\n      .then(res => setComments([...comments, res]));\n  };\n\n  if (loadingStatus) {\n    return (<Loader />);\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>\n        {`Post details: ${comments.length}`}\n      </h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{details?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length ? (\n          <>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setVisibility(current => !current)}\n            >\n              {visibility\n                ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`}\n            </button>\n\n            <ul className=\"PostDetails__list\">\n              {visibility && comments.map(comment => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={comment.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteComment(comment.id)}\n                  >\n                    X\n                  </button>\n\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          </>\n        ) : (\n          <h3>There is no comments!</h3>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addNewComment={addComment}\n            postId={selectedPostId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getPostComments = (postId: number) => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const postComment = (newComment: Partial<Comment>) => {\n  return request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n\nexport const removeComment = (commentId: number) => {\n  return request(`/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { getUsers } from './api/posts';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { UserSelect } from './components/UserSelect/UserSelect';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    getUsers()\n      .then(gotUsers => setUsers(gotUsers));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          users={users}\n          currentUserId={currentUserId}\n          selectUserId={setCurrentUserId}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={currentUserId}\n            selectedPostId={selectedPostId}\n            selectPost={setSelectedPostId}\n          />\n        </div>\n\n        {selectedPostId > 0 && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}